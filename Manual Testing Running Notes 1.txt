					
					


Full stack 							tools						Testing
(java , python , .net ...)			powerBI , tableau 		

Developer					
					
					
QA Team :

https://opensource-demo.orangehrmlive.com/web/index.php/auth/login					



								Testing
								
			Functional 					 non-Functional					
					
					
					
Functional Tester :

					Functional Testing 
					
					
			Manual 						Automation
										- Selenium
										- Cypress
										- Playwright 
										- TOSCA 
										
										
										
Web apps 
Mobile apps 

Appium  


Selenium + Java :

40 to 50 % Core Java 

Manual Testing : 

4 Modules :

1) Software testing concepts 

2) Software testing project 

3) Agile and Jira tool 

4) SQL (mysql ) 


-------------------------------
Selenium + Java :

-----------------------------------------------------
Day 1 : 31 st July 


Software : 


set of instruction of programs to accomplish some tasks

e.g 

Calculator app , whatsapp 

Softwares :

1. System software

e.g Operating System , driver etc 

2. Programming software

e.g  compilers , interpreters ,debugging tools 

3. Application softwares

e.g Web Apps , mobile apps , mainframes , silverlite apps  etc ...



Testing

is a process of checking developed software/apps working as per client business requirment or not


-> to find defects or bugs 


-> primary motto  of testing is to deliver a Quality and Risk free product



-----------------------------------------------------
Day 2 : 1 st August 

-----------------------------------------------------

what to test in now-a-days application (Web or Mobile ) ?


1. Functionalities 

(functionalities / behaviours / journeys / scenarios )

2. GUI (graphical user interface )

3. Performance Testing 

4. Load Testing 

5. Security Testing 

6. Compatability 

										
how to test ?


1. Manual Testing 

Testing activity carried out for testing software applications using Man effort 

2. Automation Testing

Testing activity carried out for testing software applications using some tools or programs 
								
					
Automation : The process of converting Test Cases into Test Scripts using some tools 			
					

Terminologies in Software Development or Testing :


1. Product : 

if a software application developed for multiple users 

e.g 

NCR company developing ATM machine and software for multiple customer 

HDFC , ICICI , Kotak mahindra 


2. Project 					

if a software application developed for  a single user or organization

e.g Fidility product which is customized for some particular client (BOA bank of america)

3. Error : Any incorrect human action or mistakes which gives wrong results

4. Defect /Bug /Issue / Fault :

Any deviation between expected behaviour to actual behaviour 

5. Failure :

if end user identifies a defect while using software application.


Note : 


presence of errors will results in defects

presence of defects will results in failure

why do a software application have defects ?

1) Incorrect requirements
2) Wrong design
3) Wrong coding or poor coding
4) complex architecture
5) work pressure or time pressure 
6) frequently changing business requiements



-----------------------------------------------------
Day 3 : 2 nd August 

-----------------------------------------------------


what are roles and duties of tester ?


1) understand application under test (AUT) - Domain Knowledge

- Banking 

- Insurance 

- e-commerce 

2) Formal Testing ( writing and executing test cases)

3) Adhoc Testing or Informal ( No test cases)

4) Finding defects and report to developers

5) Retesting and regression testing 

6) Develop automation scripts 

7) exceuting automation scripts

8) Analyse test reports 

9) Prepare and publish test reports 

-------------------------------------------------------
Software Testing Principles :

1. Exhaustive Testing is impossible

If we test a functionality with all possible valid inputs and Invalid inputs 
then it is called exhaustive testing.

In simple words , testing everything is called exhaustive testing.

If we check login with all registered users then it is called exhaustive testing.
which is practically impossible.

Instead of validating all user , we choose few from each category and then validate.

2. Defect Clustering :

sometimes a small functionality may produce more number of defects when compared to bigger functionality

for e.g , Registration functionality might have many field in it's page 
compare to payment gateway page .

but there will be complex business logic runs behind payement gateway page.

so here we need to put more effort on Payment gateway page compared to registration page.


3. Pesticide Paradox 

If prepared test cases are not able to find defects.
Then add more test cases or modify test cases if required for better testing 


4. Early Testing

Conducting testing as soon as possible in the development life cycle .


Testing right from requirements phase is called Early Testing.

5. Testing is application dependent / situation dependent :

TEst approach may slightly vary from project to project.

for e.g : Testing a calculator application is different from testing shopping application

As calculator application is a desktop application , there is no need of Load or Performance testing


Testing is situation dependent.

sometimes test approach may slightly change based on time availabilty , resource availabilty and cost.

i.e if sufficient time availabilty you will go for both Formal and Informal testing
otherwise only Formal Testing


6. Testing should show presence of defects 

Always testing should be carried out with an intention of finding defects .

We have to find defects before customer find them.

This can be achived by doing negative testing .


7. Absence of defects is a fallacy 

Finding and fixing defects. 100% bug free app is impossible.

***** (Fallacy = False statement)

-----------------------------------------------------
Day 4 : 3rd August Thursday

-----------------------------------------------------

Software Development Life Cycle :

A SDLC Model will explain how various development activites implemented in a project.


								SDLC Model
								
								
			Sequential Models						Incremental Models

			- Waterfall model						- RAD Model
			
			- V Model								- Prototype Model
			
													- Spiral Model
													
													- Agile Model 
													
													
													
Waterfall model :

Waterfall model is well suited for developing small size projects where requirements are very clear


													
V Model :

V-Model model is well suited for developing small size projects 
where requirements are not clear

			
								
RAD Model : Rapid Application Development

RAD  model is suitable for big projects which to be completed in short span of time.


Prototype Model: 

Protoype model is best suited for developing big size projects , we opt thisfor the following two
scenarios.

i. if customer providing a reference application
ii. If customer requirements are not clear

Spiral Model :



-----------------------------------------------------
Day 5 : 4th August  Friday

-----------------------------------------------------


Software Testing =  Verification + Validation


Verification or Static Testing :

Preventive approach conducted at realy stages of development

In static testing we are going to check the documents related to project.


Review :

chekcing or examing a project related task 

Requirement Reviews :

These review carried out by domain experts (Business Sales Team / Business Analysts) to find 
mistakes at requiement phase .

Design Reviews :

These review carried out by  System experts (Solution / System architects ) to find mistakesin design


Code Reviews :

These reviews carried out by Senior developers to find any deviations in coding standards.

Test Case Reviews :  

These reviews carried out by Senior Testers preferably Test Lead to check the test cases are enough 
to test the project.

Formal Reviews :

if any review activity carried out by following proper review procedures or guidelines.


Inspection and Audit are the best examples for Formal review


Inspection : if a formal review carried out while executing a task 

Audit :  if a formal review carried execution of task 


Walk Throughs : 

Knowledge Transition Session conducted 


------------------------------------


Validation or Dynamic Testing :



Unit testing :

A smallest part in source code of application such as programs or methods / functions etc
is called units

Testing conducted on this units is called unit testing

Integration Testing : 

once all units are tested , programs are combined together

Testing conducted on overall output is called Integration testing.


White Box Testing :

Testing conducted on source code by developers


Blackbox Testing :


System testing :

Once Integration testing is done , the source code is converted into exectable format
called Build or exe File or ipa file or apk file and deployment into system.

Testing conducted on System or deployed code is called Blackbox testing 

System testing will be conducted in some environment :

Dev Environment or Dev Servers

TEst Environment or QA Servers or SIT (System Integration Test Environment)

UAT : User Acceptance Testing 

the code is deployed in seperate servers or machine 

and will be tested by client or QA people


Aplha Testing : 

if testing is carried in company premises 

BEta Testing : 

A final round of testing out at client premises 



-----------------------------------------------------
Day 6 : 7th August  Monday

-----------------------------------------------------

Functional System testing types :

1) Smoke Testing : 

build : an excutable file  after compling the source code 

it can be url or .exe or .apk or ipa 

It is a kind of quick test or rough test performed on given build or application 
to decide wheter it is eligible for further detail testing or not


what to test ?

i) we have to check all major features are availabile or not
ii) we have to check the given application consistently operable or not

Note : Smoke testing is carried out to make sure whether given application
is testable or not . Not to find defect.

2) Formal Testing :

If we test a s/w application by following proper documents or procedures (Test Cases)


In simple words , writing test cases and executing test cases is called Formal Testing .

3) Adhoc Testing 

If we you test a s/w application without following proper documents or procedures (No Test Cases)

Note : Adhoc Testing will be performed after Formal Testing if we have enough time.

4) Priority Based Testing : 

It is a process of deciding what to test first what to test next, what to test last 
then we execute the tests in same order

5) ReTesting : 

It is a process of validating reported defects/bugs are correctly resolved or not on modified build.


6) Regression Testing :

It is process of identifing various functionalities in modified build wheter there is a change of
getting side effects . Then testing those functionalities.

7) End to End Testing :

It is process of checking overall functionalities of the system from begining to end.

This will be carried out by seniors testers preferably teste lead to make decission whether to stop
testing or not .

-----------------------------------------------------
Day 7 : 8th August  Tuesday

-----------------------------------------------------

8) Sanity Testing :

It is process of validating various functionalities depends on bug found in production.

Basically, Sanity testing is subset of regression testing.



7) End to End Testing 

It is process of checking overall functionalities of the system from begining to end.

This will be carried out by seniors testers preferably teste lead to make decission whether to stop
testing or not .

Special Functional System testing types :

1. Bench Mark Testing 

It is a process of comparing our product with an established product in market.

2. Exploratory Testing 

Exploratoring the applictaion , understanding the applictaion then testing it.

in two scenarios , we go for exploratory testing

i) requirement documentation is not available
ii) if requirements documentation is not providing sufficient inputs

mostly senior domain knowledge will be involved 

3. Monkey or Gorilla or Zig zag 

Wantedly performing uneven operations or zig-zag operations with an intension of
making system failure is called monkey testing .


----------------------------------------------------------

Non-Functional Testing types:

Testing performed to check reponsiveness , stability and security etc aspects are 
called Non Functional testing .

1. User Interface Testing 


2. Usability 

Usability testing is a way to see how easy to use something is by testing it with real users.

3. Performance Testing 

Responsiveness 

Stability

WE check following paramters:

time

speed 

user data volume 



-> Load Testing 

testing the stability of the system under different loads .

we increase the load gradually and test the s/m


-> Stress Testing

Suddenly increasing the load and checking stability

-> Soak Testing 

-> Volume Testing (user volume )

Here we test the user data volume capacity that s/m can hold 

-> Spike Testing
		
these testing are done using tools 

jmeter ,load runner , neo load etc ...



4) Security Testing 

it is the process of testing how much your application is secured.

-> Authentication Testing
-> Authorization Testing
-> Cookies Testing
-> SQL Injection Testing

Authentication Testing:
User is using valid credentials and accessing the application.
Authorization Testing:
User is having  limited access rights 
User Privileges ( Read/Write Access)



SQL Injection Testing:
Hacking / Phishing:  Stealing your data
SQL Queries .......................
unwanted queries injection.......



5) Compatabilty Testing 
Compatibility testing is a type of software testing that focuses 
on ensuring that a software application 
or system functions correctly across different environments, platforms, devices and browsers.

The primary objectives of compatibility testing include:

Platform Compatibility: Testing the software on various operating systems (such as Windows, macOS, Linux)
and versions of those systems to ensure it works as expected on each platform.

Browser Compatibility: Ensuring that web applications or websites perform consistently 
across different web browsers (e.g., Chrome, Firefox, Safari, Internet Explorer).


6) Globalization Testing or Internationalization Testing  or I18N Testing

It is a process of checking end user having a choice to configure different language options

(currency  ,date and time format )


7) Localization Testing or L10N Testing

It's a process of chekcing default format , currancy or language for the product designed for 
a specific locality of users.


8)Recovery Testing :

It's a process of checking how does our application handling unexpected or unpredictable 
situation's like power failure ,system crash , internet issues etc ..


9)Installation Testing :

It's a process of checking are we able to install the software successfully or not 
as per guidelines given in installation document.


10) UnInstallation Testing :

It's a process of checking are we able to uninstall the s/w successfully or not

also the data clean up.


-----------------------------------------------------
Day 8 : 9th August  Wednesday

-----------------------------------------------------

11) Accessibility Testing : 

************************************
Module 2 : software testing project 
*************************************

STLC 

-----------------------------------------------------
Day 9 : 10th August  Thursday

-----------------------------------------------------


Test Planning:


Test Strategy : 

It is high level plan or approach defined by the management that explains 
how to carry out current project testing .


Test Plan :

It's a detailed work plan that explains how testing activites are carried out 


IEEE 829  Test plan document should have following components:

1) Project Overiew
2) Document Refrences 
3) Scope of Testing 
   3.1 InScope (features to be tested)
   3.2 OutScope (Features not to be tested)
4) Test Strategy
5) Test Environment
6) Test Deliverables 
7) Staffing planning 
8) Risk and Mitigation Planning 
9) Work Schedules
10) approvals    


https://demo.guru99.com/v4/


Access details to demo site.
User ID :	mngr266311
Password :	Admin123$
This access is valid only for 20 days.

Admin Role

Banker Role 

Customer Role 



-----------------------------------------------------
Day 10 : 11 th August  Friday

-----------------------------------------------------

Requirement Clarification 

Test Design :


-> Test Scenario 

In Simple words :  what to test ?

A feature or functionality or a behaviour to be tested in application under test 

Few test scenarios for calculator app 

1. check addition
2. check subraction
3. check multiplication

etc..

Few test scenarios for Mobile  Instrument

1. check Switch on/off

2. check battery charging 

3. check volume

4. check camera 

5. check making a called


 


-> Test Case 

In Simple words : how to test ?

The steps to test a behvaiour or functionality or features is called Test case 




Test Sceanrios for Adactin Home Page 


- Login 

- Forgot Password

- New User Registration


Test cases for "Login" 




username kapilpalepu
password Jehovah@jk12	


??????????????????????????????????????????????????????
Assignment 

write Test Sceanrios for Sending Email in Gmail app 


?????????????????????????????????????????????????????

please send your assignment to below email id 

flmtechteam.testing@frontlinesedutech.com


-----------------------------------------------------
Day 11 : 14 th August  Monday

-----------------------------------------------------



Test scenarios for sending Email in Gmail app
  1: Compose Email
  2:  Reply Email
  3:  Forward Email
  
  
1) Creating a new email / compose email
2) Forward an existing email 
3) sending an email from drafts
4) replying to existing email

------------------------------------------------------

Requirement 

Payment of product 

-> payment through CC

-> payment through UPI

-> payment through gift card

-> payment to net banking

-> payment through DC

-> payment through wallet

-> payment through COD

-> payment through EMI 

------------------------------------------------------


Test Case :


A set of pre-conditions , test procedures , input data , and expected behaviour of
the system / app planned by tester to validate a functionality in project 



???????????????????????????????????????????
Write Test cases for Adactin Hotel app

https://adactinhotelapp.com/

1. Login Scenario
2. Registration Sceanrio

????????????????????????????????????????????????
please send your assignment to below email id 

flmtechteam.testing@frontlinesedutech.com



-----------------------------------------------------
Day 12 : 16 th August  Wednesday

-----------------------------------------------------

Test Case Design Techniques :

1) Equivalance Class Partioning
2) Boundary value Analysis
3) Decission Table Testing
4) State Transition Testing
5) Error Guessing Testing 



For e.g 

In Ranford bank app ,

there are 3 roles 

admin
banker
customer 


let's say  there are 400 users(admin/banker/customer) in database

100 admin
150 banker
150 customer

-------------------------------------------------

Boundary Value Analysis (BVA):


for US Bank 

		AMOUNT 			SERVICE-CHARGE
		
		1-100			10%
		
		100-500			20%
		
		500 - 10000		30%
			

-----------------------------------------------------
Day 13 : 17 th August  Thursday

-----------------------------------------------------
			

3) Decission Table Testing or Cause-Effect Table or Business Rules Testing


												   n
if you have n inputs no of  combinations will be  2   



Let's take example of tranfering money from account 
which is already added and approved


Here , conditions to tranfer money 

- Account already approved
- OTP (one time password) matched
- Sufficient money in account


and Actions performed


Tranfer Money

show a message as insufficent amount

OTP mismatch


?????????????????????????????????????????????????



New Customer			15%

Existing Customer		10%

Coupon					25%

please send your assignment to below email id 

flmtechteam.testing@frontlinesedutech.com


???????????????????????????????????????????????


4) State Transition Testing :



????????????????????????

Write TC1 for booking a hotel in 

Adactin Hotel app

https://adactinhotelapp.com/


please send your assignment to below email id 

flmtechteam.testing@frontlinesedutech.com

??????????????????????????????????????????????????


5) Error Guessing Testing  

Error Guessing used to find bugs in s/w application  based on tester experience


-----------------------------------------------------
Day 14 : 18 th August  Friday

-----------------------------------------------------
			

reyaz009
reyaz123


Requirement Tracabilty Matrix (RTM) :


Mapping requiements to corresponding Test Scenarios and test cases is called RTM


Req id 			Test Scenario Ref		Test Case Ref

R_1.1			HomePage_TS001			HomePage_TS001_TC001
									
*********************
Test Execution Phase
*********************

1. build deployment
2. build acceptance testing (smoke testing)
3. Executing Test Cases (Formal Testing)
4. Documenting and reporting defects to dev team
5. Conducting reTesting on Modified build
6. Conducting Regression Testing on modified build
7. Conducting end-to-end testing on final build


1. Build deployment

Along with every build we will recive two document.

1. SRN    2. DD

Software Release Notes ( SRN)

1) Dev Team Info
2) Testing Team info	
3) build path or URL 
4) features developed
5) known issues
6) regression testing scenarios if applicable
7) Approvals 	


Deployment Document (DD):

This document will explain hardware requiements and software requiements
and build installation procedures

----------------------------------------------
2. build acceptance testing (smoke testing)
						
-------------------------------------------------						
3. Executing Test Cases (Formal Testing)	



-----------------------------------------------------
Day 15 : 19 th August  Saturday

-----------------------------------------------------
					
					
Bug/Defect : 

deviation from expected behaviour of the application or s/m


Defect Reporting tools :

-> JIRA 
-> Bug Zilla 
-> Dev Track
-> Clear Quest 


Defect Id :  unique id for the Defect

Defect Summary : one liner about the defect

Defect Description : detailed info of defect

Reprducbile (Y/N) : if defect occuring at every time  then it is called reproducable defect 

Reprducbile Steps : Test case steps(along with Test data) untill the defect is found 

Defect Severity : Describes the seriousness of defect and how much impact on business workflow

4 catagories :


Very High			or     Blocker (Show Stopper)   

High				or     Critical 

Medium				or     Major 

Low		            or     Minor 		
 
Defect Priority  : the order in which defect to be resolved is called defect priority

 4 Catagories :

Very High  or P0

High       or P1

Medium     or P2

Low        or P3

or 

3 Catagories :

High       or P0

Medium     or P1

Low        or P2


ex : 

Low Priority and low severity

spelling mistakes in a page which is not frequently navigated by user

Low Priority and high severity

Incorrect Logo or Incorrect Company Title

high Severity and high Priority :

Login is taking to blank page 
					
low Severity and high priority:

After user is looged in home page and find spelling mistake in home page 					
					
???????????????????????????????????????????????

find atleast 5 to 6 bugs in Adactin hotel app

use defect template and 


please send your assignment to below email id 

flmtechteam.testing@frontlinesedutech.com

??????????????????????????????????????????????????


-----------------------------------------------------
Day 16 : 21 st August  Monday

-----------------------------------------------------
					
Bug/Defect Life Cycle 

Resolution Types :

-> Rejected ( since working right now) 

-> Duplicate (already raised ) 

-> Postponed (future enhancements will be taken in coming sprints/releases)

-> 



-----------------------------------------------------
Day 17 : 22 nd August  Tuesday

-----------------------------------------------------

********************
Test Closure Phase 
********************

Entry Criteria :

1) All Resources like Man power , h/w , /s/w (environments) should be ready

2) Every one should be trained and should have enough functional knowledge
or domain of AUT (application under test )

3) All the test cases and scenarios should be reviewed and up to date 

4) Test Data should be available 

------------------------------------------

Exit Criteria :

1) All test cases should be passed

2) All the Major or Critical defects should be closed

3) All the test metrics like test case execution  reports , defect reports should be prepared

4) All the approvals should be completed / finished 


Test Metrics :

Test Sceanrio summary report
Test Case Summary report
Defect summary reports


************************************
Please go through the below
projects

write test scenarios , test cases and find defects 


https://adactinhotelapp.com/

https://demo.opencart.com/

Randford bank or https://demo.guru99.com/v4/

https://opensource-demo.orangehrmlive.com/web/index.php/auth/login

************************************
===============================================================
Module 3 

Agile Model / Agile Methodology  / Agile Process 

Iterative and Incremental approach

Agile Principles :

1. Customer no need to wait for long time to see atleast a small feature 
2. we develop , test and release piece of software to the customer
3. we can accept / accomodate requiements changes 
4. There will be good Communication between Customer , BA , Dev team and testers 

Dis advantages :

1. Less Documentation
2. client will invest more 

SCRUM Framework :



-----------------------------------------------------
Day 18 : 22 nd August  Tuesday

-----------------------------------------------------

Scrum is Framework  

Scrum includes group of people called "Scrum Team"

Normally 5 -9 members 

1. Product Owner
2. Scrum Master
3. B.A's 
4. UI/UX designer 
5. Dev Team 
6. QA Team 
7. Dev Ops 

-----------------------
1. Product Owner : similiar to project manager 

- collects the features to be developed from customers

- priortize the features 

- Accepts or rejects the work results 

- adjust the features priority every iteration

2. Scrum Master 

will have good knowledge on Agile /Scrum process 

- scheduling all the meetings or Ceremonies and send invites to the groups 
- and will drive all the meeting 

5. Dev Team
 
- FE FrontEnd   for Web
- BE BankEnd (Java FS / Python FS  etc )
- Android Developers
- iOS Developers

6. QA Team 

Manual Testers
Automation - Web and Mobile 

---------------------------------
Scrum Terminologies

User Story : A feature/module/journey/functionality in a software app

Epic : collection of user stories under same catagories 

Product Backlog : contains the list of all user stories 

Sprint : period /time span for completion of user stories. 
2 - 4 weeks

Story Points : estimates of work for each stories 

fibonnaci series 

0 1 1 2 3 5 8 13 

https://planningpokeronline.com/qrV8JLViHaiV24VLFAKa/


Sprint backlog : list of stories to be started in current sprint 



----------------------------------------------
Ceremonies : 

Sprint Planning : 

Daily Stand up or Status Call or Scrum Call : 

Sprint Review or Demo : 

Sprint Retrospective : 

Backlog Grooming : 


-----------------------------------------------------
Day 19 : 24 th August  Thursday

-----------------------------------------------------
JIRA is Project Mangement tool



https://www.atlassian.com/software/jira/work-management/free



https://flmjuly31stnew.atlassian.net/jira/software/projects/SCRUM/boards/1


-----------------------------------------------------
Day  : 29 th August  Tuesday

-----------------------------------------------------

Database Testing :

Performing operations in FrontEnd (AUT) , validating at Backend (Database) is called Database Testing.


RDBMS (Relation Database Mangement Systems)

ORACLE , SQL SERVER , IBM DB2 etc ..



need of SQL ?

SQL stands for Structured Query Language  which is a common used to communicate with
any RDBMS like ORACLE , SQL SERVER , IBM DB2 ,My SQL etc ..

										SQL
								
			-------------------------------------------------------------					
			|								|							 |

		 DDL								DML							DCL&TCL
		 
	Data Definition Language	 		Data Manipulation				Data Control Language
	
		- CREATE						- INSERT						- GRANT 
		- ALTER							- UPDATE						- REVOKE
		- DROP							- DELETE						- BEGIN Transaction
		- TRUNCATE 						- SELECT 						- Commit Transaction
		- RENAME							- JOINS						- Rollback Transaction
											- SUB Queries
		 
		 
		 
My SQL Server :

download and install 

https://www.mysql.com/downloads/

Click on "MySQL Community (GPL) Downloads »"

Click on "MySQL Installer for Windows"

under the tab "General Availability (GA) Releases "


download the msi file of "Windows (x86, 32-bit), MSI Installer"


-----------------------------------------------------
Day  : 30 th August  Wednesday

-----------------------------------------------------




mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+								
								
						
--------------------------------------
Creating a Database :

CREATE DATABASE DATABASE-NAME;
--------------------------------------

Creating a Table in DATABASE :	

first you need to enter into database 

USE DATABASE-NAME;

--------------------------------------
Creating a table :

CREATE TABLE tablename 
(
  column1 datatype[size] [CONSTRAINT] ,
  column2 datatype[size] [CONSTRAINT] ,
  - - - -
  columnn datatype[size] [CONSTRAINT] ,

);
--------------------------------------					

Constraint : 

are used to enforce business rules 

1. NULL 

2. NOT NULL 

3. UNIQUE : if you don't allow duplicates in a column 

4. PRIMARY KEY 

5. REFERENCE KEY or FOREIGN KEY 



CREATE TABLE emp (
  empno decimal(4,0) NOT NULL,
  ename varchar(10) default NULL,
  job varchar(9) default NULL,
  mgr decimal(4,0) default NULL,
  hiredate date default NULL,
  sal decimal(7,2) default NULL,
  comm decimal(7,2) default NULL,
  deptno decimal(2,0) default NULL
);

CREATE TABLE dept (
  deptno decimal(2,0) default NULL,
  dname varchar(14) default NULL,
  loc varchar(13) default NULL
);


------------------------------------
how to insert data into tables 

INSERT INTO TABLENAME [(column list)] values(value list);

----------------------------------------------------
Retrieving data from DATABASE tables :

SELECT command is used 

SELECT [ALL/DISTINCT] [TOP N or LIMIT N] * or Column list FROM TABLENAME 
[WHERE CONDITION] 
[GROUP BY COLUMSN[s]]
[HAVING CONDITION]
[ORDER BY COLUMN[s] [ASC/DESC]



https://justinsomnia.org/2009/04/the-emp-and-dept-tables-for-mysql/



-----------------------------------------------------
Day  : 31st August  Thursday

-----------------------------------------------------

Aggregate functions in SQL :

SUM(columnname)

select sum(sal) from emp;
select avg(sal) from emp;
select min(sal) from emp;
select count(*) from emp;


WHERE CONDITION :

select * from emp where deptno = 10;

select count(*) from emp where deptno = 10;

select * from emp WHERE deptno=10 AND deptno=20;

select * from emp where hiredate like '%%%%-01-%%';

GROUP BY : 
It divides the main table into logical sub tables then specified aggregate functions can be executed.

SELECT deptno from emp GROUP BY deptno;

SELECT deptno,sum(sal) from emp GROUP BY deptno;

SELECT deptno,sum(sal) from emp GROUP BY deptno;

HAVING 

SELECT deptno,sum(sal) from emp GROUP BY deptno HAVING sum(sal) > 9000;

ORDER BY :  ASC   DESC 

select * from emp order by sal;
or
select * from emp order by sal ASc;

select * from emp order by sal desc;

*****************************
*****************************

write a sql query to find 2nd highest salary from emp table ?

select * from emp limit 2;

select * from emp where deptno NOt IN (10,20);

select * from emp where deptno  <> 10;

select sal from (select * from emp ORDEr by sal desc limit 2) as emp1 order by sal ASC limit 1;



-----------------------------------------------------
Day  : 1st September  Friday

-----------------------------------------------------


select * from emp WHERE deptno=10 AND sal>2000;


select ename from emp where sal=(select max(sal) from emp);


---------
Finding nth Highest Salary


Method 1: write a sql query to find 2nd highest salary from emp table ?

select sal from (select * from emp ORDER by sal DESC LIMIT 2) as emp1 ORDER By sal LIMIT 1;

select sal from (select * from emp ORDER by sal DESC LIMIT 3) as emp1 ORDER By sal LIMIT 1;

inner query

select distinct(sal)  from emp ORDER by sal DESC LIMIT 3;

select sal from (select distinct(sal)  from emp ORDER by sal DESC LIMIT 3) as emp1 ORDER By sal LIMIT 1;

Method 2 :


select max(sal) from emp where sal <> (select max(sal) from emp);


Finding nth Lowest Salary:

select sal from (select distinct(sal) from emp order by sal limit 2) as emp1 ORDER By sal DESC LIMIT 1;
select distinct(sal) from emp order by sal limit 2;


????????
who is taking 2nd highest salary 

select ename from emp where sal=(select sal from (select * from emp ORDER by sal DESC LIMIT 2) as emp1 ORDER By sal LIMIT 1);


-----------------------------

JOINS 

to retrieve data from multiple tables

JOIN Types :

1. Inner Join

2. Left Outer Join 

3. Right Outer Join 

4. Full Outer Join

5. CROSS Join


Syntax : 


SELECT  Table1.column1,Table1.column2 ......
		Table2.column1,Table2.column2 ......
		from Table1 <join type> Table2 
		on join condition;
		
		
Inner Join :

SELECT  emp.empno,emp.ename,emp.deptno,
		dept.dname,dept.loc
		from emp JOIN dept 
		on emp.deptno=dept.deptno;

mysql> SELECT  emp.empno,emp.ename,emp.deptno,
    ->          dept.dname,dept.loc
    ->          from emp JOIN dept
    ->          on emp.deptno=dept.deptno;
+-------+--------+--------+------------+----------+
| empno | ename  | deptno | dname      | loc      |
+-------+--------+--------+------------+----------+
|  7369 | SMITH  |     20 | RESEARCH   | DALLAS   |
|  7499 | ALLEN  |     30 | SALES      | CHICAGO  |
|  7521 | WARD   |     30 | SALES      | CHICAGO  |
|  7566 | JONES  |     20 | RESEARCH   | DALLAS   |
|  7654 | MARTIN |     30 | SALES      | CHICAGO  |
|  7698 | BLAKE  |     30 | SALES      | CHICAGO  |
|  7782 | CLARK  |     10 | ACCOUNTING | NEW YORK |
|  7788 | SCOTT  |     20 | RESEARCH   | DALLAS   |
|  7839 | KING   |     10 | ACCOUNTING | NEW YORK |
|  7844 | TURNER |     30 | SALES      | CHICAGO  |
|  7876 | ADAMS  |     20 | RESEARCH   | DALLAS   |
|  7900 | JAMES  |     30 | SALES      | CHICAGO  |
|  7902 | FORD   |     20 | RESEARCH   | DALLAS   |
|  7934 | MILLER |     10 | ACCOUNTING | NEW YORK |
+-------+--------+--------+------------+----------+


2. Left Outer Join :

SELECT  emp.empno,emp.ename,emp.deptno,
		dept.dname,dept.loc
		from emp LEFT OUTER JOIN dept 
		on emp.deptno=dept.deptno;

INSERT INTO emp VALUES ('8900','MIKE','CLERK','7782','1983-01-24','1350.00',NULL);

3. Right Outer Join :

SELECT  emp.empno,emp.ename,emp.deptno,
		dept.deptno,dept.dname,dept.loc
		from emp RIGHT OUTER JOIN dept 
		on emp.deptno=dept.deptno;
		

-----------------------------------------------------
Day  : 4th September  Thursday

-----------------------------------------------------
	
Wild cards in sql is similar to pattern mataching concept

_ % 

use to substitue one or more characters in a string or datatype 

% return 0 or more characters

_ return 0 or single character	


Primary Key :  { unique + Not Null}


candidate keys : unique and can be null 




